CC=@CC@
CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
CPPFLAGS=@CPPFLAGS@
INSTALL=@INSTALL@
LIBS=@LIBS@
srcdir=@srcdir@
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
texmf=@TEXMF@
psheaderdir=$(texmf)/dvips
programs=dvipdfm ebb
headers=dvi.h pdflimits.h error.h mfileio.h jpeg.h mem.h numbers.h \
	pdfdev.h pdfdoc.h pdfparse.h pdfspecial.h tfm.h type1.h epdf.h \
	vf.h dvicodes.h t1crypt.h
src=pdfdev.c pdfdoc.c dvi.c mfileio.c mem.c jpeg.c numbers.c pdfobj.c \
	pdfparse.c pdfspecial.c tfm.c type1.c dvipdfm.c epdf.c vf.c t1crypt.c
objects=pdfdev.o pdfdoc.o dvi.o mfileio.o mem.o jpeg.o numbers.o pdfobj.o \
        pdfparse.o pdfspecial.o tfm.o type1.o dvipdfm.o epdf.o vf.o t1crypt.o
eobjects=ebb.o jpeg.o pdfobj.o mem.o mfileio.o numbers.o pdfparse.o

check default all: $(programs)
ebb: $(eobjects) Makefile
	$(CC) -o ebb $(eobjects) $(LDFLAGS) $(LIBS)
dvipdfm:  $(objects) Makefile
	$(CC) -o dvipdfm $(objects) $(LDFLAGS) $(LIBS)
include depend.make
#
# Install/uninstall
#
install: install-exec install-data
uninstall: uninstall-exec uninstall-data
install-exec: all
	$(INSTALL) -d $(bindir)
	for i in $(programs) ; \
	  do $(INSTALL) $$i $(bindir); \
	done
# pdffonts.map.
install-data:
	if test ! -r $(psheaderdir)/dvipdfm/pdffonts.map \
	   || grep 'original pdffonts.map --' $(psheaderdir)/dvipdfm/pdffonts.map \
	   >/dev/null; then  \
	   $(INSTALL) -d $(psheaderdir)/dvipdfm ; \
	   $(INSTALL) ./pdffonts.map $(psheaderdir)/dvipdfm/pdffonts.map; \
	else true; fi
uninstall-exec:
	rm -f $(bindir)/$(programs)

uninstall-data:
	if grep 'original pdffonts.map --' $(psheaderdir)/dvipdfm/pdffonts.map \
	   >/dev/null 2>&1; then rm -f $(psheaderdir)/dvipdfm/pdffonts.map; \
	else true; fi
#
# Developer stuff
#
maintainerclean: clean distclean
	rm -f c-auto.h.in configure
distclean: clean
	rm -f Makefile c-auto.h config.cache confdefs.h
clean:
	rm -f $(programs) *.o *.pdf 
	for i in . doc latex-support ; \
	   do rm -f $$i/*.dvi $$i/*.log $$i/*~ $$i/*.out $$i/*.aux $$i/core ; \
	done
	rm -f doc/dvipdfm.pdf latex-support/sample.pdf
TAGS:	$(src)
	etags *.[ch]
depend:
	rm -f depend.make
	make depend.make
depend.make:
	gcc -MM $(src) > depend.make
#
# Autoconf stuff
#
Makefile: Makefile.in configure
	echo "***** You need to rerun ./configure. *****"
	exit 1
@MAINT@c-auto.h: c-auto.h.in configure.in
@MAINT@	echo "***** You need to rerun ./configure. *****"
@MAINT@	rm c-auto.h
@MAINT@	exit 1
@MAINT@c-auto.h.in: acconfig.h configure.in
@MAINT@	autoheader
@MAINT@	touch c-auto.h.in
@MAINT@configure: configure.in
@MAINT@	autoconf
