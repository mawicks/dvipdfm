CC=@CC@
CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
CPPFLAGS=@CPPFLAGS@ -I .
INSTALL=@INSTALL@
LIBS=@LIBS@
srcdir=@srcdir@
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
texmf=@TEXMF@
dvipdfmdir=$(texmf)/dvipdfm
psheaderdir=$(texmf)/dvips
programs=dvipdfm ebb
scripts=dvipdft
headers=dvi.h pdflimits.h error.h mfileio.h jpeg.h mem.h numbers.h \
	pdfdev.h pdfdoc.h pdfparse.h pdfspecial.h tfm.h type1.h epdf.h \
	vf.h dvicodes.h t1crypt.h pkfont.h tpic.h thumbnail.h htex.h \
	twiddle.h mpost.h psimage.h psspecial.h
src=pdfdev.c pdfdoc.c dvi.c mfileio.c mem.c jpeg.c numbers.c pdfobj.c \
	pdfparse.c pdfspecial.c tfm.c type1.c dvipdfm.c epdf.c vf.c \
	t1crypt.c pkfont.c tpic.c thumbnail.c pngimage.c ebb.c htex.c \
	mpost.c psimage.c psspecial.c
objects=pdfdev.o pdfdoc.o dvi.o mfileio.o mem.o jpeg.o numbers.o pdfobj.o \
        pdfparse.o pdfspecial.o tfm.o type1.o dvipdfm.o epdf.o vf.o \
	t1crypt.o pkfont.o tpic.o thumbnail.o pngimage.o htex.o \
	mpost.o psimage.o psspecial.o
eobjects=ebb.o jpeg.o pdfobj.o mem.o mfileio.o numbers.o pdfparse.o \
	pngimage.o mpost.o pdfdev.o pdfdoc.o type1.o thumbnail.o \
	pkfont.o dvi.o vf.o htex.o tfm.o tpic.o pdfspecial.o \
	t1crypt.o epdf.o psimage.o psspecial.o
encodings=ot1.enc ot1alt.enc
check default all: $(programs)
ebb: $(eobjects) Makefile
	$(CC) -o ebb $(eobjects) $(LDFLAGS) $(LIBS)
dvipdfm:  $(objects) Makefile
	$(CC) -o dvipdfm $(objects) $(LDFLAGS) $(LIBS)
include depend.make
#
# Install/uninstall
#
install: install-exec install-data
uninstall: uninstall-exec uninstall-data
install-exec: all
	$(INSTALL) -d $(bindir)
	for i in $(programs) $(scripts) ; \
	  do $(INSTALL) $$i $(bindir); \
	done
# t1fonts.map.
install-data:
	mkdir $(dvipdfmdir) 2> /dev/null || true;
	if test -r $(psheaderdir)/dvipdfm/pdffonts.map \
	   && test ! -r $(dvipdfmdir)/t1fonts.map; \
	then \
	   cp $(psheaderdir)/dvipdfm/pdffonts.map $(dvipdfmdir)/t1fonts.map; \
	fi   
	if test ! -r $(dvipdfmdir)/t1fonts.map \
	   || grep 'original t1fonts.map --' $(dvipdfmdir)/t1fonts.map \
	   >/dev/null; then  \
	   $(INSTALL) -m 644 ./t1fonts.map $(dvipdfmdir)/t1fonts.map; \
	else true; fi
	if test ! -r $(dvipdfmdir)/config \
	   || grep 'original config --' $(dvipdfmdir)/config \
	   >/dev/null; then  \
	   $(INSTALL) -m 644 ./config $(dvipdfmdir)/config; \
	else true; fi
	for i in $(encodings); \
	   do $(INSTALL) -m 644 $$i $(dvipdfmdir); \
	done
uninstall-exec:
	rm -f $(bindir)/$(programs) $(bindir)/$(scripts)
uninstall-data:
	if grep 'original pdffonts.map --' $(psheaderdir)/dvipdfm/pdffonts.map \
	   >/dev/null 2>&1; then rm -f $(psheaderdir)/dvipdfm/pdffonts.map; \
	else true; fi
	if grep 'original pdffonts.map --' $(dvipdfmdir)/dvipdfm/pdffonts.map \
	   >/dev/null 2>&1; then rm -f $(dvipdfmdir)/pdffonts.map; \
	else true; fi
	if grep 'original t1fonts.map --' $(dvipdfmdir)/dvipdfm/t1fonts.map \
	   >/dev/null 2>&1; then rm -f $(dvipdfmdir)/t1fonts.map; \
	else true; fi
	if grep 'original config --' $(dvipdfmdir)/dvipdfm/config \
	   >/dev/null 2>&1; then rm -f $(dvipdfmdir)/config; \
	else true; fi
	cd $(dvipdfmdir); rm -f $(encodings)
#
# Developer stuff
#
maintainerclean: clean distclean
	rm -f config.h.in configure
distclean: clean
	rm -f Makefile config.h config.cache confdefs.h
clean:
	rm -f $(programs) *.o *.pdf 
	for i in . doc latex-support ; \
	   do rm -f $$i/*.dvi $$i/*.log $$i/*~ $$i/*.out $$i/*.aux $$i/core ; \
	done
	rm -f doc/dvipdfm.pdf latex-support/sample.pdf
TAGS:	$(src)
	etags *.[ch]
depend:
	rm -f depend.make
	make depend.make
depend.make:
	$(CC) $(CPPFLAGS) -MM $(src) > depend.make
#
# Autoconf stuff
#
@MAINT@Makefile: Makefile.in configure
@MAINT@	echo "***** You need to rerun ./configure. *****"
@MAINT@	exit 1
@MAINT@config.h: config.h.in configure.in
@MAINT@	echo "***** You need to rerun ./configure. *****"
@MAINT@	rm config.h
@MAINT@	exit 1
@MAINT@config.h.in: acconfig.h configure.in
@MAINT@	autoheader
@MAINT@	touch config.h.in
@MAINT@configure: configure.in
@MAINT@	autoconf
@MAINT@dist: depend configure
	/bin/rm -rf ../dvipdfm
	mkdir ../dvipdfm
	tar -zcf ../dvipdfm-@VERSION@.tar.gz -T distribution-file-list
	cd ..
	tar -C ../dvipdfm -zxf ../dvipdfm-@VERSION@.tar.gz
	tar -C .. -zcf ../dvipdfm-@VERSION@.tar.gz dvipdfm
@MAINT@dvipdfm-static:  $(objects) Makefile
	$(CC) -o dvipdfm-static $(objects) --static $(LDFLAGS) $(LIBS)
@MAINT@ebb-static : $(eobjects) Makefile
	$(CC) -o ebb-static $(eobjects) --static $(LDFLAGS) $(LIBS)
@MAINT@bin-dist: dvipdfm-static ebb-static dvipdfm ebb VERSION
@MAINT@	/bin/rm -rf dvipdfm-bin
@MAINT@	mkdir -p dvipdfm-bin
@MAINT@	cp -a dvipdfm ebb INSTALL-BINARY COPYING README t1fonts.map dvipdfm-bin
@MAINT@	strip dvipdfm ebb dvipdfm-static ebb-static
@MAINT@	tar -zcf ../dvipdfm-binary-linux-i386-glibc-@VERSION@.tar.gz dvipdfm-bin
@MAINT@	/bin/rm -rf dvipdfm-bin
@MAINT@	mkdir -p dvipdfm-bin
@MAINT@	cp -a INSTALL-BINARY COPYING README t1fonts.map dvipdfm-bin
@MAINT@	cp -a dvipdfm-static dvipdfm-bin/dvipdfm
@MAINT@	cp -a ebb-static dvipdfm-bin/ebb
@MAINT@	tar -zcf ../dvipdfm-binary-linux-i386-static-@VERSION@.tar.gz dvipdfm-bin
@MAINT@	/bin/rm -rf dvipdfm-bin
